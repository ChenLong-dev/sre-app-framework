package dao

import (
	"context"
	"gitlab.shanhai.int/sre/library/base/deepcopy.v2"
	
)

// ====================
// >>>请勿删除<<<
//
// 数据层
// ====================
type Dao struct {
	
}

// ====================
// >>>请勿删除<<<
//
// 新建数据层
// ====================
func New() (dao *Dao) {
	
	dao = &Dao{}
	return
}

// ====================
// >>>请勿删除<<<
//
// 实现数据层接口
// ====================
func (d *Dao) Close(c context.Context) {
	
}

// ====================
// >>>请勿删除<<<
//
// 用于拷贝数据层的键结构体
// ====================
type CloneKey string

// ====================
// >>>请勿删除<<<
//
// 用于拷贝数据层的键
// ====================
const (	
)

// ====================
// >>>请勿删除<<<
//
// 用于拷贝数据层的选项
// ====================
type CloneOption struct {
	Key   CloneKey
	Value interface{}
}

// ====================
// >>>请勿删除<<<
//
// 拷贝数据层方法
// 常用于事务
// ====================
func (d *Dao) Clone(options ...CloneOption) (*Dao, error) {
	cloneDao := new(Dao)

	err := deepcopy.Copy(d).To(cloneDao)
	if err != nil {
		return nil, err
	}

	// 手动拷贝指定类型
	for _, option := range options {
		switch option.Key {
		}
	}

	return cloneDao, nil
}
